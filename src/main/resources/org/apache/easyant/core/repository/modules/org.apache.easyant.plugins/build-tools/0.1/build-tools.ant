<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project name="org.apache.easyant.plugins#build-tools" xmlns:ea="antlib:org.apache.easyant" xmlns:ivy="antlib:org.apache.ivy.ant">

    <ea:core-version requiredrevision="[0.8,+]" />

    <target name=":init" phase="validate">

        <ea:parameter phase="validate" />
        <ea:parameter phase="verify" />
        <ea:parameter phase="publish-local" />
        <ea:parameter phase="release" />

        <ea:parameter property="lib.main" required="true" description="directory where main libraries are picked up" />
        <ea:parameter property="lib.test" required="true" description="directory where test libraries are picked up" />
        <ea:parameter property="release.resolver" required="true" description="the name of the resolver use for release publication" />
        <ea:parameter property="shared.resolver" required="true" description="the name of the share resolver" />
        <ea:parameter property="project.ivy.instance" default="project.ivy.instance" description="ivy instance name" />
        <ea:parameter property="project.ivy.file" required="true" description="ivy file (use to resolve dependencies for the project)" />
        <ea:parameter property="default.build.number" required="true" description="default project version" />
        <ea:parameter property="revision.separator" required="true" description="separator for version" />
        <ea:parameter property="ivy.haltonmissing" description="defines if ivy must halt when artifact is missing" default="true" />

        <ea:parameter property="submodule.target" description="target to invoke on each submodule for :run-all" default="verify" />
        <ea:parameter property="submodule.publish" description="whether to publish artifacts to the build-scoped repository after a :run-all" default="true" />
        <ea:parameter property="submodule.dirs" description="pattern or comma-separated list indicating which submodules directories should be included in the build" default="**/*" />
    </target>


    <target name="-buildlist" depends="validate">
        <ivy:buildlist reference="build-path" ivyfilepath="module.ivy" settingsRef="${project.ivy.instance}">
            <fileset dir="${basedir}" excludes="module.ivy" includes="${submodule.dirs}">
                <filename name="**/module.ivy" />
            </fileset>
        </ivy:buildlist>
        <!-- put the current file in the cache -->
        <ivy:resolve file="${project.ivy.file}" settingsRef="${project.ivy.instance}" showprogress="false" log="quiet" />
    </target>

    <target name=":clean-all" depends="-buildlist" description="clean all submodules and build-scope repository" phase="clean">
        <ea:submodule target="clean" buildpathref="build-path" useBuildRepository="false" />
        <!-- clean build-scoped repository and cache -->
        <delete dir="${basedir}/target" />
    </target>

    <!-- Package -->
    <target name=":package-all" depends="-buildlist" description="package all submodules">
        <ea:submodule target="package" buildpathref="build-path" useBuildRepository="true" />
    </target>

    <!-- Verify -->
    <target name=":verify-all" depends="-buildlist" description="verify all submodules" phase="verify">
        <ea:submodule target="verify" buildpathref="build-path" useBuildRepository="true" />
    </target>

    <target name=":run-all" depends="-buildlist" description="invoke an arbitrary target on each submodule">
        <ea:submodule target="${submodule.target}" buildpathref="build-path" useBuildRepository="${submodule.publish}" />
    </target>

    <!-- Meta project publication -->
    <!-- ================================= 
          target: publish-local              
         ================================= -->
    <target name=":publish-all-local" depends="-buildlist" description="publish all submodules in local repository" phase="publish-local">
        <ea:submodule target="publish-local" buildpathref="build-path" />
    </target>

    <!-- ================================= 
          target: release              
         ================================= -->
    <target name=":publish-all-shared" depends="-buildlist" description="publish all submodules in a shared repository" phase="publish-shared">
        <ea:submodule target="publish-shared" buildpathref="build-path" />
    </target>


    <!-- ================================= 
          target: publish-shared              
         ================================= -->
    <target name=":release-all" depends="-buildlist" description="release all submodules" phase="release">
        <ea:submodule target="release" buildpathref="build-path" />
    </target>





    <target name="doit" depends=":verify-all" />
</project>
